// Code generated by ./_fetcher.tt.go
package fetcher_{{t}}

import ({{I}})

type Fetcher struct {
  container *map[string]{{T}}
  defaultValue *{{T}}
}

func New(container *map[string]{{T}}) *Fetcher {
  return &Fetcher{
    container:    container,
    defaultValue: nil,
  }
}

func (f *Fetcher) WithDefault(value *{{T}}) *Fetcher {
  f.defaultValue = value
  return f
}

func (f *Fetcher) Fetch(key string) {{T}} {
  if f.defaultValue == nil {
    return f.HardFetch(key)
  }
  return f.FetchWithDefault(key, *f.defaultValue)
}

func (f *Fetcher) HardFetch(key string) {{T}} {
  return (*f.container)[key]
}

func (f *Fetcher) FetchWithDefault(key string, defaultValue {{T}}) {{T}} {
  if result, found := (*f.container)[key]; found {
    return result
  }
  return defaultValue
}
